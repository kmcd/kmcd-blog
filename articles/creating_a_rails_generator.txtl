---
title:  Creating a Rails generator
tag:   Rails
date:  Sep 22 2007
---

In this article, I'll show you how a *custom generator* can speed up your Rails workflow by copying some boilerplate code. For example, instead of copying and pasting CSS and HTML layout you can create a generator to do this for you.

If you've coded even the most basic Rail app you'll be familiar with generators. We let @./script/generate@ & friends automate mundane & error prone tasks and leave us to get on with the fun stuff. If you're _not_ familiar with generators just read the "Rails command line guide":http://guides.rubyonrails.org/command_line.html and expiriment with @./script/generate@ from the root of a Rails app directory.

h2. Create a new app with a RailCasts style UI

Here's a quick way to create a new rails app with "Railscasts":http://railscasts.com style presentation. The idea being that when you want to watch a new episode you can:
# create a new rails app @rails_metal@
# generate a RailsCasts style UI @cd rails_metal && ./script/generate
railscasts_ui@
# start the server @./script/server@ and follow along

Seeing as you'll probably use this on multiple, seperate Rails apps, the
generator should be saved in @~/.rails/generators/railscasts_ui@ .

# Create the generator directory 
  @mkdir -p /.rails/generators/railscasts_ui/templates@
  
# Change to the generator directory
  @cd /.rails/generators/railscasts_ui@
  
# Create a documentation file
  @touch USAGE@
  
# Create the stylesheet
  @touch templates/railscasts.css@
  
# Create the layout file
  @touch templates/application.rhtml@
  
# Create the generator file @edit templates/railscasts_ui.rb@ . Note that the class name must be a camel case version of the generator directory (RailscastsUi).
<pre>
class RailscastsUi < Rails::Generator::NamedBase
  def manifest
    record do |m|
      m.directory "#{RAILS_ROOT}/public/stylesheets"
      m.file "railscasts.css",    "#{RAILS_ROOT}/public/stylesheets/railscasts.css"
      
      m.directory "#{RAILS_ROOT}/app/views/layouts"
      m.file "application.rhtml", "#{RAILS_ROOT}/app/views/layouts/application.rhtml"
    end
  end
end
</pre>

You can use this technique to automate any static file creation or copying, e.g. if you want to have different stylesheets for development and production. 

h2. References

* "Rails API":http://api.rubyonrails.org/classes/Rails/Generator/Base.html
* "Creating generator Rails guide":http://guides.rubyonrails.org/plugins.html#generators
* "Railscasts":http://railscasts.com/episodes/58-how-to-make-a-generator
* "Aidan Finn's excellent tutorial":http://www.aidanf.net/rails/creating-your-own-generators-in-rails
